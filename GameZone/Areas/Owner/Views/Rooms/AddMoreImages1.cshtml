@model AddMoreImagesViewModel

@{
    ViewData["Title"] = "Add More Images";
}

<div class="container-fluid">
    <h2 class="text-center text-success mb-4">Add More Images</h2>
    <hr />

    <form id="imagesForm" asp-action="AddMoreImages" method="post" enctype="multipart/form-data">
        <input type="hidden" asp-for="RoomId" />

        <div class="row">
            <!-- Left Column: File Inputs -->
            <div class="col-lg-6 col-12">
                <div class="form-group">
                    <label class="form-label">Primary Image</label>
                    <input type="file" class="form-control" id="primaryImage" name="Files" />
                    <span asp-validation-for="Files" class="text-danger"></span>
                </div>

                <div class="form-group mt-3">
                    <label class="form-label">Additional Image 1</label>
                    <input type="file" class="form-control" id="additionalImage1" name="Files" />
                    <span asp-validation-for="Files" class="text-danger"></span>
                </div>

                <div class="form-group mt-3">
                    <label class="form-label">Additional Image 2</label>
                    <input type="file" class="form-control" id="additionalImage2" name="Files" />
                    <span asp-validation-for="Files" class="text-danger"></span>
                </div>

                <div class="form-group mt-3">
                    <label class="form-label">Additional Image 3</label>
                    <input type="file" class="form-control" id="additionalImage3" name="Files" />
                    <span asp-validation-for="Files" class="text-danger"></span>
                </div>

                <!-- The submit button is now of type button so that we can intercept it -->
                <button type="button" id="submitBtn" class="btn btn-success mt-4">Save Images</button>
                <a class="btn btn-secondary mt-4" asp-action="GetAll">Cancel</a>
            </div>

            <!-- Right Column: Image Previews (2 images per row) -->
            <div class="col-lg-6 col-12">
                <div class="row" id="imagePreviewContainer">
                    <!-- Primary Image Preview -->
                    <div class="col-6 mb-3">
                        <img id="primaryPreview" src="~/Assets/image-white.png" alt="Primary Image Preview" class="img-fluid border rounded" />
                    </div>
                    <!-- Additional Image 1 Preview -->
                    <div class="col-6 mb-3">
                        <img id="preview1" src="~/Assets/image-white.png" alt="Additional Image 1 Preview" class="img-fluid border rounded" />
                    </div>
                    <!-- Additional Image 2 Preview -->
                    <div class="col-6 mb-3">
                        <img id="preview2" src="~/Assets/image-white.png" alt="Additional Image 2 Preview" class="img-fluid border rounded" />
                    </div>
                    <!-- Additional Image 3 Preview -->
                    <div class="col-6 mb-3">
                        <img id="preview3" src="~/Assets/image-white.png" alt="Additional Image 3 Preview" class="img-fluid border rounded" />
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Dynamically load SweetAlert2 library.
        (function loadSweetAlert2() {
            var script = document.createElement('script');
            script.src = "https://cdn.jsdelivr.net/npm/sweetalert2@11";
            script.onload = initialize;
            document.head.appendChild(script);
        })();

        // Initialize the remaining functionalities once SweetAlert2 is loaded.
        function initialize() {
            // Helper function to update preview images.
            function updatePreview(inputElement, previewId) {
                if (inputElement.files && inputElement.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        document.getElementById(previewId).src = e.target.result;
                    };
                    reader.readAsDataURL(inputElement.files[0]);
                }
            }

            // Attach file change listeners.
            document.getElementById('primaryImage').addEventListener('change', function () {
                updatePreview(this, 'primaryPreview');
            });

            document.getElementById('additionalImage1').addEventListener('change', function () {
                updatePreview(this, 'preview1');
            });
            document.getElementById('additionalImage2').addEventListener('change', function () {
                updatePreview(this, 'preview2');
            });
            document.getElementById('additionalImage3').addEventListener('change', function () {
                updatePreview(this, 'preview3');
            });

            // SweetAlert2 confirmation on submit.
            document.getElementById('submitBtn').addEventListener('click', function (e) {
                e.preventDefault(); // prevent immediate form submission
                Swal.fire({
                    title: 'Confirm Submission',
                    text: "Are you sure you want to save these images?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, save it!',
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // If confirmed, submit the form
                        document.getElementById('imagesForm').submit();
                    }
                });
            });
        }
    </script>
}
